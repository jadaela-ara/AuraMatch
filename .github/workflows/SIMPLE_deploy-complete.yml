# Workflow de d√©ploiement complet AuraMatch - Version simple
name: 'Simple Deploy Complete Application'

on:
  push:
    branches: ['main']
  workflow_dispatch:

env:
  PROJECT_ID: 'auramatch-470020'
  REGION: 'europe-west1'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/343501244023/locations/global/workloadIdentityPools/auramatch-pool/providers/github-oidc'
  REGISTRY: 'europe-west1-docker.pkg.dev'

jobs:
  deploy-backend:
    name: 'Deploy Backend'
    runs-on: 'ubuntu-latest'
    
    permissions:
      contents: 'read'
      id-token: 'write'
    
    outputs:
      backend-url: ${{ steps.deploy-backend.outputs.url }}
    
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'
      
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
      
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
      
      - name: 'Create Backend Artifact Registry repository'
        run: |
          gcloud artifacts repositories describe auramatch-backend \
            --location=${{ env.REGION }} || \
          gcloud artifacts repositories create auramatch-backend \
            --repository-format=docker \
            --location=${{ env.REGION }} \
            --description="AuraMatch Backend Docker repository"
      
      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          registry: ${{ env.REGISTRY }}
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.auth_token }}'
      
      - name: 'Build and Push Backend Container'
        run: |
          DOCKER_TAG="${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/auramatch-backend/auramatch-backend:${{ github.sha }}"
          
          cd backend
          docker build -t "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"
          
          echo "BACKEND_DOCKER_TAG=${DOCKER_TAG}" >> $GITHUB_ENV
      
      - name: 'Deploy Backend to Cloud Run'
        id: deploy-backend
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: 'auramatch-backend'
          region: '${{ env.REGION }}'
          image: '${{ env.BACKEND_DOCKER_TAG }}'
          flags: |
            --allow-unauthenticated
            --port=3001
            --memory=1Gi
            --cpu=1
            --min-instances=0
            --max-instances=10
            --concurrency=80
            --timeout=300
          env_vars: |
            NODE_ENV=production
            PORT=3001

  deploy-frontend:
    name: 'Deploy Frontend'
    needs: deploy-backend
    runs-on: 'ubuntu-latest'
    
    permissions:
      contents: 'read'
      id-token: 'write'
    
    outputs:
      frontend-url: ${{ steps.deploy-frontend.outputs.url }}
    
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'
      
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
      
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
      
      - name: 'Create Frontend Artifact Registry repository'
        run: |
          gcloud artifacts repositories describe auramatch-frontend \
            --location=${{ env.REGION }} || \
          gcloud artifacts repositories create auramatch-frontend \
            --repository-format=docker \
            --location=${{ env.REGION }} \
            --description="AuraMatch Frontend Docker repository"
      
      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          registry: ${{ env.REGISTRY }}
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.auth_token }}'
      
      - name: 'Prepare Frontend Build'
        run: |
          BACKEND_URL="${{ needs.deploy-backend.outputs.backend-url }}"
          
          cat > .env.production << EOF
          VITE_API_BASE_URL=${BACKEND_URL}
          VITE_SOCKET_URL=${BACKEND_URL}
          VITE_NODE_ENV=production
          EOF
          
          echo "Frontend environment configured with backend: ${BACKEND_URL}"
          cp .dockerignore.frontend .dockerignore
      
      - name: 'Build and Push Frontend Container'
        run: |
          DOCKER_TAG="${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/auramatch-frontend/auramatch-frontend:${{ github.sha }}"
          
          docker build -f Dockerfile.frontend -t "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"
          
          echo "FRONTEND_DOCKER_TAG=${DOCKER_TAG}" >> $GITHUB_ENV
      
      - name: 'Deploy Frontend to Cloud Run'
        id: deploy-frontend
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: 'auramatch-frontend'
          region: '${{ env.REGION }}'
          image: '${{ env.FRONTEND_DOCKER_TAG }}'
          flags: |
            --allow-unauthenticated
            --port=8080
            --memory=512Mi
            --cpu=1
            --min-instances=0
            --max-instances=5
            --concurrency=80
            --timeout=300
      
      - name: 'Update Backend Environment Variables'
        run: |
          FRONTEND_URL="${{ steps.deploy-frontend.outputs.url }}"
          BACKEND_URL="${{ needs.deploy-backend.outputs.backend-url }}"
          
          echo "Updating backend environment variables..."
          gcloud run services update auramatch-backend \
            --region=${{ env.REGION }} \
            --update-env-vars="FRONTEND_URL=${FRONTEND_URL}" \
            --update-env-vars="GOOGLE_CALLBACK_URL=${BACKEND_URL}/api/auth/google/callback" \
            --update-env-vars="FACEBOOK_CALLBACK_URL=${BACKEND_URL}/api/auth/facebook/callback"

  deployment-summary:
    name: 'Deployment Summary'
    needs: [deploy-backend, deploy-frontend]
    runs-on: ubuntu-latest
    
    steps:
      - name: 'Show Deployment Summary'
        run: |
          echo "üéâ Complete AuraMatch deployment finished successfully!"
          echo ""
          echo "üì± Application URLs:"
          echo "   Frontend: ${{ needs.deploy-frontend.outputs.frontend-url }}"
          echo "   Backend:  ${{ needs.deploy-backend.outputs.backend-url }}"
          echo ""
          echo "üîß OAuth Google Configuration Required:"
          echo "   Console: https://console.cloud.google.com/apis/credentials"
          echo "   Callback URL: ${{ needs.deploy-backend.outputs.backend-url }}/api/auth/google/callback"
          echo "   Authorized Origins: ${{ needs.deploy-frontend.outputs.frontend-url }}"
          echo ""
          echo "‚öôÔ∏è Environment Variables to Configure (Cloud Run Console):"
          echo "   MONGODB_URI=mongodb+srv://..."
          echo "   JWT_SECRET=your_secure_jwt_secret"
          echo "   GOOGLE_CLIENT_ID=your_google_client_id"
          echo "   GOOGLE_CLIENT_SECRET=your_google_client_secret"
          echo ""
          echo "üöÄ Your AuraMatch application is ready!"
