# Workflow de déploiement Backend AuraMatch sur Cloud Run
name: 'Deploy Backend to Cloud Run'

on:
  push:
    branches: ['main']
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  workflow_dispatch:
  workflow_call:
    outputs:
      backend-url:
        description: "URL du service backend déployé"
        value: ${{ jobs.deploy.outputs.backend-url }}

env:
  PROJECT_ID: 'auramatch-470020'
  REGION: 'europe-west1'
  SERVICE: 'auramatch-backend'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/343501244023/locations/global/workloadIdentityPools/auramatch-pool/providers/github-oidc'
  REGISTRY: 'europe-west1-docker.pkg.dev'
  REPOSITORY: 'auramatch-backend'

jobs:
  deploy:
    runs-on: 'ubuntu-latest'
    
    permissions:
      contents: 'read'
      id-token: 'write'
    
    outputs:
      backend-url: ${{ steps.deploy.outputs.url }}
    
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'
      
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
      
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
      
      # Créer le repository Artifact Registry s'il n'existe pas
      - name: 'Create Artifact Registry repository'
        run: |
          gcloud artifacts repositories describe ${{ env.REPOSITORY }} \
            --location=${{ env.REGION }} || \
          gcloud artifacts repositories create ${{ env.REPOSITORY }} \
            --repository-format=docker \
            --location=${{ env.REGION }} \
            --description="AuraMatch Backend Docker repository"
      
      - name: 'Docker Auth'
        uses: 'docker/login-action@v3'
        with:
          registry: ${{ env.REGISTRY }}
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.auth_token }}'
      
      - name: 'Build and Push Backend Container'
        run: |
          DOCKER_TAG="${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"
          
          # Build depuis le dossier backend
          cd backend
          docker build -t "${DOCKER_TAG}" .
          docker push "${DOCKER_TAG}"
          
          # Sauvegarder pour les étapes suivantes
          echo "DOCKER_TAG=${DOCKER_TAG}" >> $GITHUB_ENV
      
      - name: 'Deploy Backend to Cloud Run'
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.DOCKER_TAG }}'
          flags: |
            --allow-unauthenticated
            --port=3001
            --memory=1Gi
            --cpu=1
            --min-instances=0
            --max-instances=10
            --concurrency=80
            --timeout=300
          env_vars: |
            NODE_ENV=production
            PORT=3001
      
      - name: 'Show Backend URL'
        run: |
          echo "🚀 Backend deployed successfully!"
          echo "📍 Backend URL: ${{ steps.deploy.outputs.url }}"
          echo "🔗 API Health: ${{ steps.deploy.outputs.url }}/api/health"
      
      - name: 'Test Backend Health'
        run: |
          echo "🔍 Testing backend health..."
          sleep 30  # Attendre que le service soit prêt
          
